!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.muleUploader=e():t.muleUploader=e()}(window,function(){return function(t){var e={};function o(s){if(e[s])return e[s].exports;var i=e[s]={i:s,l:!1,exports:{}};return t[s].call(i.exports,i,i.exports,o),i.l=!0,i.exports}return o.m=t,o.c=e,o.d=function(t,e,s){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(s,i,function(e){return t[e]}.bind(null,i));return s},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=0)}([function(t,e,o){"use strict";o.r(e),console.debug=function(){};var s=class{constructor(t){this.options=Object.assign({minLapseMs:200,averageSmoothingFactor:.8},t),this.reset()}reset(){this.startDate=this.endDate=this.lastUpdateDate=0,this.progress=0,this.currentSpeed=this.averageSpeed=this.smoothedSpeed=0,this.ended=!1}start(){var t=Date.now();this.startDate=this.lastUpdateDate=t}end(){this.endDate=Date.now(),this.currentSpeed=this.smoothedSpeed=0,this.ended=!0}update(t){var e=Date.now();this.ended||(e-this.lastUpdateDate<this.minLapseMs?console.debug("too fast speed updates"):(this.currentSpeed=(t-this.progress)/(e-this.lastUpdateDate),this._computeAverageSpeed(),this._computeSmoothedSpeed(),this.progress=t,this.lastUpdateDate=e,this.duration=Math.max(this.lastUpdateDate,this.endDate)-this.startDate))}_computeAverageSpeed(){let t=this.duration;this.averageSpeed=t?this.progress/t:0}_computeSmoothedSpeed(){this.smoothedSpeed=this.smoothedSpeed*this.options.averageSmoothingFactor+this.currentSpeed*(this.smoothedSpeed&&1-this.options.averageSmoothingFactor||1)}getCurrentSpeed(){return 1e3*this.currentSpeed}getAverageSpeed(){return 1e3*this.averageSpeed}getSmoothedSpeed(){return 1e3*this.smoothedSpeed}getDuration(){return this.duration/1e3}getProgress(){return this.progress}};console.debug=function(){};const i=t=>new Promise(e=>setTimeout(e,t));var a=class{constructor(t,e){if(this.chunk=t,this.options=Object.assign({onErrorRetryCount:0},e),!this.chunk.payload)throw"chunk must have a payload attribute";if(!this.chunk.contentType)throw"chunk must have a contentType attribute";if(!this.chunk.contentRange)throw"chunk must have a contentType attribute";if(!this.chunk.expectedReturnCode)throw"chunk must have a expectedReturnCode attribute";if(void 0===this.chunk.rangeStart)throw"chunk must have a rangeStart attribute";if(void 0===this.chunk.rangeEnd)throw"chunk must have a rangeEnd attribute";this.xhr=null,this.aborted=!1}async run(){let t=[];for(let e=0;!this.aborted&&e<=this.options.onErrorRetryCount;e++){try{let e=await this._futch(this.options.uploadURI,{method:"PUT",body:this.chunk.payload,onProgressCallback:this.options.onProgressCallback,headers:{"Content-Type":this.chunk.contentType,"Content-Range":this.chunk.contentRange}});if(console.debug("got response",e),e.status!=this.chunk.expectedReturnCode)throw`error while pushing chunk: ${e.status} ${e.statusText}`;return e}catch(e){t.push(e)}console.debug("truncated exponential backoff"),await i(1e3*Math.pow(2,e)+1e3*Math.random())}throw t}_futch(t,e={}){return new Promise((o,s)=>{this.xhr=new XMLHttpRequest,this.xhr.open(e.method||"get",t);for(let t in e.headers||{})this.xhr.setRequestHeader(t,e.headers[t]);this.xhr.onload=(t=>o(t.target)),this.xhr.onerror=s,this.xhr.upload&&e.onProgressCallback&&(this.xhr.upload.onprogress=e.onProgressCallback),this.xhr.send(e.body)})}abort(){console.debug("aborting chunkUpload"),this.aborted=!0,this.xhr&&this.xhr.abort&&this.xhr.abort()}};console.debug=function(){};var r=class{constructor(t,e){if(this.storageObject=t,this.options=Object.assign({chunkSize:5242880},e),!this.storageObject.fileName)throw"storageObject must have a fileName attribute";if(!this.storageObject.payload)throw"storageObject must have a payload attribute";if(!this.storageObject.uploadURI)throw"storageObject must have an uploadURI attribute";console.debug("StorageObject chunk size is",this.options.chunkSize),this.chunksCount=Math.ceil(this.storageObject.payload.size/this.options.chunkSize),this.chunks=[...Array(this.chunksCount).keys()],this.chunksProgress=[...Array(this.chunksCount).values()],this.speedMonitor=new s,this.chunkUpload=null,this.aborted=!1}_getNextChunk(){let t=this.chunks.shift();if(void 0===t)return;let e=t*this.options.chunkSize,o=Math.min(e+this.options.chunkSize,this.storageObject.payload.size),s=`bytes ${e}-${o-1}/${this.storageObject.payload.size}`;return{ID:t,payload:this.storageObject.payload.slice(e,o),contentType:"application/octet-stream",contentRange:s,rangeStart:e,rangeEnd:o,expectedReturnCode:t+1==this.chunksCount?200:308}}_onChunkProgress(t,e){e.loaded&&(this.chunksProgress[t]=e.loaded),this._onStorageObjectProgress()}_onStorageObjectProgress(){let t=0;for(let e of this.chunksProgress)t+=e||0;this.speedMonitor.update(t),console.debug("_onStorageObjectProgress",t,this.storageObject.payload.size),this.options.onProgressCallback&&this.options.onProgressCallback(t,this.storageObject.payload.size)}async run(){try{let t;for(this.speedMonitor.start();!this.aborted&&void 0!==(t=this._getNextChunk());)console.debug("nextChunk",t),this.chunkUpload=new a(t,{uploadURI:this.storageObject.uploadURI,onErrorRetryCount:2,onProgressCallback:this._onChunkProgress.bind(this,t.ID)}),await this.chunkUpload.run()}catch(t){throw`not able to upload chunk, ${t}`}}abort(){console.debug("aborting storageObjectUpload"),this.aborted=!0,this.chunkUpload&&this.chunkUpload.abort&&this.chunkUpload.abort()}};console.debug=function(){};class n{constructor(t,e,o){this.fileStorageObjectsProgress=t,this.storageObjectsProgress=[...Array(this.fileStorageObjectsProgress.length).values()],this.getNextStorageObject=e,this.onProgressCallback=o,this.speedMonitor=new s,this.aborted=!1,this.storageObjectUpload=null}async run(){let t;for(this.speedMonitor.start();void 0!==(t=this.getNextStorageObject());)this.storageObjectUpload=new r(t,Object.assign({},this.options,{onProgressCallback:this._onStorageObjectProgress.bind(this,t.ID)})),await this.storageObjectUpload.run();this.speedMonitor.end(),console.debug("Finishing runner")}_onStorageObjectProgress(t,e,o){this.fileStorageObjectsProgress[t]=e,this.storageObjectsProgress[t]=e;let s=0;for(let t of this.storageObjectsProgress)s+=t||0;this.speedMonitor.update(s),this.onProgressCallback()}abort(){console.debug("aborting fileUploadRunner"),this.aborted=!0,this.storageObjectUpload&&this.storageObjectUpload.abort&&this.storageObjectUpload.abort()}getSpeedMonitor(){return this.speedMonitor}}var h=class{constructor(t,e){this.file=t,this.options=Object.assign({parallelUploads:1},e),console.debug("File upload settings",e),this.storageObjectsCount=Math.max(1,Math.min(32,Math.floor(this.file.size/this.options.parallelMinSize))),this.options.parallelUploads>this.storageObjectsCount&&console.warn("not able to reach full acceleration potential,","this may occur because your file is too small,","please consider adjusting parallelMinSize."),this.storageObjects=[],this.storageObjectsProgress=[...Array(this.storageObjectsCount).values()],this.runners=[],this.speedMonitor=new s}_getNextStorageObject(){let t=this.storageObjects.shift();return console.debug("next storageObject",t),t}_onFileProgress(t){let e=0;for(let t of this.storageObjectsProgress)e+=t||0;if(this.speedMonitor.update(e),t)var o=8*this.speedMonitor.getAverageSpeed()/1024/1024;else{let t=0;for(let e of this.runners)t+=e.getSpeedMonitor().getSmoothedSpeed();o=8*t/1024/1024}console.debug("_onfileProgress",e,this.file.size,this.speedMonitor.getDuration().toFixed(1),o.toFixed(2)),this.options.onProgressCallback&&this.options.onProgressCallback(e,this.file.size,this.speedMonitor.getDuration(),o)}async authorize(){if(this.authorization=await this._getAuthorization(),this.authorization.uploadParts.length!=this.storageObjectsCount)throw"incorrect parts count within authorization";let t=Math.ceil(this.file.size/this.storageObjectsCount);for(let e=0;e<this.storageObjectsCount;e++)this.storageObjects.push({ID:e,fileName:`${this.authorization.uploadPartsFilenamePrefix}.${e}`,payload:this.file.slice(e*t,Math.min(t*(e+1),this.file.size)),uploadURI:this.authorization.uploadParts[e].uploadURI});return this.objectsComposition=this.storageObjects.reduce((t,e)=>(t.push({name:e.fileName}),t),[]),console.debug("Storage objects computation",{objectsCount:this.storageObjectsCount,objectSize:t,objects:this.storageObjects,objectsComposition:this.objectsComposition}),this.authorization}async run(){if(!this.authorization)throw"authorization required, please call authorize() first";this.speedMonitor.start();var t=[];for(let e=0;e<Math.min(this.options.parallelUploads,this.storageObjectsCount);e++){let o=new n(this.storageObjectsProgress,this._getNextStorageObject.bind(this),this._onFileProgress.bind(this));this.runners.push(o),console.debug("Launching runner",e),t.push(o.run())}return await Promise.all(t),this.speedMonitor.end(),console.info("all running uploads successfully finished"),this._onFileProgress(!0),await this._composeStorageObjects()}async _composeStorageObjects(){console.info("composing final file and purging upload parts, this may take a few seconds");let t=new URLSearchParams;t.append("fileName",this.file.name),t.append("uploadBackendID",this.authorization.uploadBackendID);let e=new Request(this.options.composeAuthorizationURL+"?"+t.toString(),{method:"POST",body:JSON.stringify(this.objectsComposition),cache:"no-store"}),o=await fetch(e,{mode:this.options.authorizeFetchMode});if(o.status<200||o.status>299)throw`error while getting compose authorization: ${o.status} ${o.statusText}`;return await o.json()}async _getAuthorization(){console.log("getting file upload authorization, this can take a couple of seconds");let t=new URLSearchParams;t.append("fileName",this.file.name),t.append("fileSize",this.file.size),t.append("parts",this.storageObjectsCount);let e=new Request(this.options.uploadAuthorizationURL+"?"+t.toString(),{method:"GET",cache:"no-store"}),o=await fetch(e,{mode:this.options.authorizeFetchMode});if(o.status<200||o.status>299)throw`error while getting upload authorization: ${o.status} ${o.statusText}`;let s=await o.json();if(console.debug("authorization",s),!s.uploadBackendID)throw"authorization lacks uploadBackendID";if(!s.uploadPartsFilenamePrefix)throw"authorization lacks uploadPartsFilenamePrefix";if(!s.uploadParts)throw"authorization lacks uploadParts";return s}abort(){console.debug("aborting fileUpload");for(let t of this.runners)t.abort()}};o.d(e,"GCSUpload",function(){return l}),console.debug=function(){};const u="session";class l{constructor(t){if(console.log("muleUploader GCSUpload 2.0.0 "),this.options=Object.assign({authorizeSecurityMode:u,authorizeFetchMode:"cors",chunkSize:268435456,parallelUploads:1,parallelMinSize:268435456,averageBitrateSmoothingFactor:.8},t),!this.options.uploadAuthorizationURL)throw"an upload authorization URL is required";if(!this.options.composeAuthorizationURL)throw"a compose authorization URL is required"}loadFile(t){if(!t.name||!t.size)throw"not able to load file";this.file=t,console.debug("File loaded",{size:this.file.size})}async run(){if(!this.file)throw"file not loaded";if(this.options.authorizeSecurityMode!=u)throw"backend security mode not implemented";try{this.fileUpload=new h(this.file,this.options);let t=await this.fileUpload.authorize(),e=await this.fileUpload.run();return console.info("upload complete"),{authorization:t,composedObject:e}}catch(t){throw`not able to upload, ${t}`}}async abort(){if(!this.fileUpload)throw"nothing to abort";this.fileUpload.abort(),console.info("file upload aborted")}}}])});